** start of main.py **

from abc import ABC, abstractmethod

class Rectangle(ABC):
    def __init__(self, width, height):
        self.width = width
        self.height = height
    
    def set_width(self, width):
        self.width = width
        return self.width

    def set_height(self, height):
        self.height = height
        return self.height

    def get_area(self):
        return self.width * self.height

    def get_perimeter(self):
        return (2 * self.width) + (2 * self.height)

    def get_diagonal(self):
        return (self.width**2 + self.height**2)**.5

    def get_picture(self):
        if self.width > 50 or self.height > 50:
            return 'Too big for picture.'

        if self.width <= 0 or self.height <= 0:
            return ""
        
        picture = ""
        for _ in range(self.height):
            picture += '*' * self.width + '\n'
        return picture

    def get_amount_inside(self, shape):
        # Calculate how many times shape fits horizontally and vertically
        fit_width = self.width // shape.width
        fit_height = self.height // shape.height
        return fit_width * fit_height
    
    def __str__(self):
        return f"Rectangle(width={self.width}, height={self.height})"

class Square(Rectangle):
    def __init__(self, side_length):
        super().__init__(side_length, side_length)

    def set_width(self, size):
        self.width = size
        self.height = size 

    def set_height(self, size):
        self.width = size
        self.height = size 
    
    def set_side(self, side_length):
        self.width = side_length
        self.height = side_length

    def __str__(self):
        return f"Square(side={self.width})"

rect = Rectangle(10, 5)
print(rect.get_area())
rect.set_height(3)
print(rect.get_perimeter())
print(rect)
print(rect.get_picture())

sq = Square(9)
print(sq.get_area())
sq.set_side(4)
print(sq.get_diagonal())
print(sq)
print(sq.get_picture())
sq.set_width(5)
print(sq)
sq.set_height(2)
print(sq)

rect.set_height(8)
rect.set_width(16)
print(rect.get_amount_inside(sq))

** end of main.py **

